{"ast":null,"code":"var _jsxFileName = \"E:\\\\MyProjects\\\\FormikTask\\\\tax-form\\\\src\\\\App.js\";\nimport React from \"react\";\nimport TaxForm from \"./TaxForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tax Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaxForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\n\n// const App = () => {\n//   return (\n//     <div className=\"container\">\n//       <h2>Add Tax</h2>\n//       <Formik\n//         initialValues={initialValues}\n//         validationSchema={validationSchema}\n//         onSubmit={handleSubmit}\n//       >\n//         {({ values, handleChange, setFieldValue }) => (\n//           <Form>\n//             <div className=\"form-group\">\n//               <label htmlFor=\"name\">Tax Name</label>\n//               <Field name=\"name\" type=\"text\" className=\"form-control\" />\n//             </div>\n\n//             <div className=\"form-group\">\n//               <label htmlFor=\"rate\">Rate (%)</label>\n//               <Field name=\"rate\" type=\"number\" className=\"form-control\" />\n//             </div>\n\n//             <div className=\"form-group\">\n//               <label>\n//                 <Field name=\"applied_to\" type=\"radio\" value=\"all\" /> Apply to all items in collection\n//               </label>\n//               <label>\n//                 <Field name=\"applied_to\" type=\"radio\" value=\"some\" /> Apply to specific items\n//               </label>\n//             </div>\n\n//             {values.applied_to === 'some' && (\n//               <div>\n//                 <div>Search Items</div>\n//                 {categories.map(category => (\n//                   <div key={category.id}>\n//                     <label>\n//                       <input\n//                         type=\"checkbox\"\n//                         checked={category.items.every(item => values.applicable_items.includes(item.id))}\n//                         onChange={() => {\n//                           if (category.items.every(item => values.applicable_items.includes(item.id))) {\n//                             setFieldValue('applicable_items', values.applicable_items.filter(id => !category.items.some(item => item.id === id)));\n//                           } else {\n//                             setFieldValue('applicable_items', values.applicable_items.concat(category.items.map(item => item.id)));\n//                           }\n//                         }}\n//                       />\n//                       {category.name}\n//                     </label>\n//                     <div>\n//                       {category.items.map(item => (\n//                         <div key={item.id} style={{ paddingLeft: '20px' }}>\n//                           <label>\n//                             <input\n//                               type=\"checkbox\"\n//                               name=\"applicable_items\"\n//                               value={item.id}\n//                               checked={values.applicable_items.includes(item.id)}\n//                               onChange={handleChange}\n//                             />\n//                             {item.name}\n//                           </label>\n//                         </div>\n//                       ))}\n//                     </div>\n//                   </div>\n//                 ))}\n//               </div>\n//             )}\n\n//             <button type=\"submit\" className=\"btn btn-primary\">\n//               Apply tax to {values.aplicable_items ? values.applicable_items.length : '0'} item(s\n//               );\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","TaxForm","jsxDEV","_jsxDEV","App","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/MyProjects/FormikTask/tax-form/src/App.js"],"sourcesContent":["import React from \"react\";\nimport TaxForm from \"./TaxForm\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Tax Form</h1>\n      <TaxForm />\n    </div>\n  );\n}\n\nexport default App;\n\n// const App = () => {\n//   return (\n//     <div className=\"container\">\n//       <h2>Add Tax</h2>\n//       <Formik\n//         initialValues={initialValues}\n//         validationSchema={validationSchema}\n//         onSubmit={handleSubmit}\n//       >\n//         {({ values, handleChange, setFieldValue }) => (\n//           <Form>\n//             <div className=\"form-group\">\n//               <label htmlFor=\"name\">Tax Name</label>\n//               <Field name=\"name\" type=\"text\" className=\"form-control\" />\n//             </div>\n            \n//             <div className=\"form-group\">\n//               <label htmlFor=\"rate\">Rate (%)</label>\n//               <Field name=\"rate\" type=\"number\" className=\"form-control\" />\n//             </div>\n            \n//             <div className=\"form-group\">\n//               <label>\n//                 <Field name=\"applied_to\" type=\"radio\" value=\"all\" /> Apply to all items in collection\n//               </label>\n//               <label>\n//                 <Field name=\"applied_to\" type=\"radio\" value=\"some\" /> Apply to specific items\n//               </label>\n//             </div>\n            \n//             {values.applied_to === 'some' && (\n//               <div>\n//                 <div>Search Items</div>\n//                 {categories.map(category => (\n//                   <div key={category.id}>\n//                     <label>\n//                       <input\n//                         type=\"checkbox\"\n//                         checked={category.items.every(item => values.applicable_items.includes(item.id))}\n//                         onChange={() => {\n//                           if (category.items.every(item => values.applicable_items.includes(item.id))) {\n//                             setFieldValue('applicable_items', values.applicable_items.filter(id => !category.items.some(item => item.id === id)));\n//                           } else {\n//                             setFieldValue('applicable_items', values.applicable_items.concat(category.items.map(item => item.id)));\n//                           }\n//                         }}\n//                       />\n//                       {category.name}\n//                     </label>\n//                     <div>\n//                       {category.items.map(item => (\n//                         <div key={item.id} style={{ paddingLeft: '20px' }}>\n//                           <label>\n//                             <input\n//                               type=\"checkbox\"\n//                               name=\"applicable_items\"\n//                               value={item.id}\n//                               checked={values.applicable_items.includes(item.id)}\n//                               onChange={handleChange}\n//                             />\n//                             {item.name}\n//                           </label>\n//                         </div>\n//                       ))}\n//                     </div>\n//                   </div>\n//                 ))}\n//               </div>\n//             )}\n          \n//             <button type=\"submit\" className=\"btn btn-primary\">\n//               Apply tax to {values.aplicable_items ? values.applicable_items.length : '0'} item(s\n//               );\n              "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA;IAAKE,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBH,OAAA;MAAAG,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBP,OAAA,CAACF,OAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV;AAACC,EAAA,GAPQP,GAAG;AASZ,eAAeA,GAAG;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}